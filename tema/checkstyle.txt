Starting audit...
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:1:9: Name 'Cards' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:11:17: Parameter card should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:13:23: '30' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:16:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:20:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:20:27: Parameter health should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:24:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'decreaseHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'decreaseHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:24:32: Parameter attackDamage should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:29:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'isLordRoyce' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'isLordRoyce' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:33:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'isEmpressThorina' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'isEmpressThorina' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:37:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'isGeneralKocioraw' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'isGeneralKocioraw' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:37:38: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:41:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'isKingMudface' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'isKingMudface' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:41:34: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:41:36: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:45:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'heroTransformToAnObjectNode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'heroTransformToAnObjectNode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:45:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:45:51: Parameter objectMapper should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Hero.java:50: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Minion.java:1:9: Name 'Cards' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Minion.java:10:19: Parameter card should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Minion.java:15:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'cardBelongsToPlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'cardBelongsToPlayer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Minion.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Minion.java:20:28: '3' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Minion.java:26:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Minion.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Minion.java:26:27: Parameter health should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Minion.java:29:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Minion.java:33:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Minion.java:36:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Minion.java:36:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Minion.java:36:33: Parameter newDamage should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Minion.java:40:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'decreaseHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'decreaseHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Minion.java:40:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Minion.java:40:32: Parameter attackDamage should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Minion.java:45:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'increaseHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'increaseHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Minion.java:45:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Minion.java:45:32: Parameter healthReceived should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:1:9: Name 'Cards' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:18:17: Parameter card should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:25:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:25:25: Parameter card should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:28:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getCardInfo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getCardInfo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:31:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:31:27: Parameter frozen should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:34:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'isFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'isFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:37:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setHasAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setHasAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:37:32: Parameter hasAttacked should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:40:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'hasAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'hasAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:40:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:44:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setCoords' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setCoords' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:44:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:44:27: Parameter x should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:44:34: Parameter y should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:48:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getCoords' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getCoords' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:52:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'cardTransformToAnObjectNode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'cardTransformToAnObjectNode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\Cards\Card.java:52:51: Parameter objectMapper should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\fileio\CardInput.java:16:22: Parameter cardInput should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\fileio\Coordinates.java:9:23: Parameter coords should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\fileio\Coordinates.java:14:23: Parameter x should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\fileio\Coordinates.java:14:30: Parameter y should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:4:8: Unused import - Cards.Card. [UnusedImports]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:5:8: Unused import - Cards.Hero. [UnusedImports]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:17:17: Parameter playerOne should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:17:35: Parameter playerTwo should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:17:53: Parameter shuffleSeed should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:29:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getCurrentPlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getCurrentPlayer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:33:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'switchTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'switchTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:39:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getPlayerOne' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getPlayerOne' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:42:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getPlayerTwo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getPlayerTwo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:46:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'startNewRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'startNewRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:46:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:61:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'placeCardOnTable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'placeCardOnTable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:61:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:61:34: Parameter handIdx should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:64:77: '3' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:70: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:70:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'attackCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'attackCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:70:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:70:28: Parameter coordsCardAttacker should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:70:60: Parameter coordsCardAttacked should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:90: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:91: Line is longer than 100 characters (found 132). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:106: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:106:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'cardUsesAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'cardUsesAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:106:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:106:33: Parameter coordsCardAttacker should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:106:65: Parameter coordsCardAttacked should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:141: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:142: Line is longer than 100 characters (found 132). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:182:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'attackHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'attackHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:182:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:182:28: Parameter coordsCardAttacker should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:226:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'useHeroAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'useHeroAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:226:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:226:32: Parameter affectedRow should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:226:49: Parameter player should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:234: Line is longer than 100 characters (found 151). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:234:78: '3' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:239: Line is longer than 100 characters (found 151). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:239:146: '3' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:246:13: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:246:32: '5' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:260:33: '5' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:268:33: '5' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:270: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Game.java:283:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getCurrRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getCurrRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:13:33: '4' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:13:36: '5' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:16:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'getTable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'getTable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:20:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'getMinionFromTable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'getMinionFromTable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:20:38: Parameter x should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:20:45: Parameter y should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:24:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'markCardsHasNotAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'markCardsHasNotAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:25:29: '4' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:26:33: '5' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:34:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'defrostCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'defrostCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:34:30: Parameter currentPlayer should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:44:14: ';' is not followed by whitespace. [WhitespaceAfter]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:45:33: '5' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:53:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'getCardsFromTableWithCoords' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'getCardsFromTableWithCoords' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:53:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:53:47: Parameter coords should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:57:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'existsTankOnEnemyRows' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'existsTankOnEnemyRows' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:57:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:57:41: Parameter enemy should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:60:33: '5' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:62: Line is longer than 100 characters (found 136). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:70:29: '5' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:72: Line is longer than 100 characters (found 132). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:81:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'removeCardFromTable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'removeCardFromTable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:81:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:81:37: Parameter coords should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:82:41: '4' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:86:35: '4' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:89:29: '4' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:90:33: '5' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:92:44: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:99:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'destroyCardWithMaxHealthFromRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'destroyCardWithMaxHealthFromRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:99:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:99:49: Parameter row should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:104:29: '5' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:106: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:117:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'frozenCardsToArrayNode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'frozenCardsToArrayNode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:117:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:117:45: Parameter objectMapper should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:120:29: '4' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:121:33: '5' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:123: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:133:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'tableTransformToArrayNode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'tableTransformToArrayNode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:133:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Table.java:133:48: Parameter objectMapper should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:24:19: Parameter idx should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:24:28: Parameter deck should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:24:55: Parameter hero should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:24:66: Parameter turn should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:36:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'remake' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'remake' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:36:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:36:24: Parameter deck should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:36:45: 'deck' hides a field. [HiddenField]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:36:51: Parameter hero should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:36:56: 'hero' hides a field. [HiddenField]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:36:62: Parameter turn should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:36:70: 'turn' hides a field. [HiddenField]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:45:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHeroHasAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHeroHasAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:45:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:45:36: Parameter hasAttacked should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:49:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'decreaseHeroHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'decreaseHeroHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:49:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:49:36: Parameter attackDamage should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:53:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'putCardFromDeckInHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'putCardFromDeckInHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:53:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:61: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:61:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'placeCardFromHandOnTable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'placeCardFromHandOnTable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:61:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:61:42: Parameter handIdx should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:61:55: Parameter table should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:61:73: Parameter frontRow should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:61:87: Parameter backRow should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:78:33: '5' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:91:33: '5' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:105:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'incrementMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'incrementMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:105:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:105:31: Parameter currRound should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:106:42: '10' is a magic number. [MagicNumber]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:109:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:112:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:112:25: Parameter newMana should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:115:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getCardsInHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getCardsInHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:119:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setEndedTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setEndedTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:119:30: Parameter endedTurnThisRound should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:119:38: 'endedTurnThisRound' hides a field. [HiddenField]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:122:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'hasEndedTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'hasEndedTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:122:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:126:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:130:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:130:25: Parameter turn should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:133:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:137:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:141:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getSuccesses' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getSuccesses' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:146:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'incrementWin' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'incrementWin' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:146:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:149:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'incrementLoss' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'incrementLoss' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:149:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:153:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:153:25: Parameter hero should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:156:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:160:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'cardsInHandTransformToArrayNode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'cardsInHandTransformToArrayNode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:160:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:160:54: Parameter objectMapper should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:173:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'deckTransformToArrayNode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'deckTransformToArrayNode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:173:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\Player.java:173:47: Parameter objectMapper should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:8:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:20:21: Parameter input should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:23: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:24: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:37: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:43: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:56:5: Class 'InitGame' looks like designed for extension (can be subclassed), but the method 'debugCommands' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitGame' final or making the method 'debugCommands' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:56:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:56:31: Parameter game should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:56:42: Parameter actionsInput should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:56:69: Parameter objectNode should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:59:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:71: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:73: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:99: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:112: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:174: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:197: Line is longer than 100 characters (found 147). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:238:5: Class 'InitGame' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitGame' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:238:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:238:21: Parameter input should be final. [FinalParameters]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:259: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:265: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] \\wsl.localhost\Ubuntu\home\bianca\projects\POO\tema0\oop-asignments\teme\tema\.\src\main\InitGame.java:295:5: Class 'InitGame' looks like designed for extension (can be subclassed), but the method 'getOutputArray' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitGame' final or making the method 'getOutputArray' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 243 errors.
